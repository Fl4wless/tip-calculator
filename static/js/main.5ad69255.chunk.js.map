{"version":3,"sources":["Button.js","App.js","index.js"],"names":["Button","props","className","value","onClick","e","setPercent","target","children","App","useState","input","setInput","numOfPeople","setnumOfPeople","tipPerPerson","setTipPerPerson","totalPerPerson","setTotalPerPerson","percent","useEffect","perPerson","totalPerson","htmlFor","type","name","onChange","placeholder","console","log","ReactDOM","render","document","getElementById"],"mappings":"yMAmBeA,EAhBA,SAACC,GAKd,OACE,wBACEC,UAAS,iBAAYD,EAAMC,WAC3BC,MAAOF,EAAME,MACbC,QARkB,SAACC,GACrBJ,EAAMK,WAAWD,EAAEE,OAAOJ,QAI1B,SAKGF,EAAMO,YCoGEC,MA9Gf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA4CN,mBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEA,EAA8BR,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBb,EAAhB,KAyBA,OAvBAc,qBAAU,WACR,GAAe,KAAVT,EAAiC,KAAhBE,EAAmC,KAAZM,EAAiB,CAC5D,IAAME,EAAaV,GAASQ,EAAU,KAAQN,EACxCS,EAAcX,EAAQE,EAAcQ,EAE1CL,EAAgBK,GAChBH,EAAkBI,MAEnB,CAACX,EAAOE,EAAaM,IAgBtB,qBAAKjB,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,iDACA,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOqB,QAAQ,OAAf,kBACA,uBACEC,KAAK,SACLC,KAAK,OACLC,SAAU,SAACrB,GAAD,OAAOO,EAASP,EAAEE,OAAOJ,QACnCA,MAAOQ,EACPgB,YAAY,SAGhB,sBAAKzB,UAAU,wBAAf,UACE,6CACA,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CAAQC,MAAO,EAAGG,WAAYA,EAA9B,gBAIA,cAAC,EAAD,CAAQH,MAAO,GAAIG,WAAYA,EAA/B,iBAGA,cAAC,EAAD,CAAQH,MAAO,GAAIG,WAAYA,EAA/B,iBAGA,cAAC,EAAD,CAAQH,MAAO,GAAIG,WAAYA,EAA/B,iBAGA,cAAC,EAAD,CAAQH,MAAO,GAAIG,WAAYA,EAA/B,iBAGA,uBACEkB,KAAK,SACLtB,UAAU,eACVyB,YAAY,SACZD,SApDU,SAACrB,GACzBC,EAAWD,EAAEE,OAAOJ,OACpByB,QAAQC,IAAIV,YAsDJ,sBAAKjB,UAAU,0BAAf,UACE,uBAAOqB,QAAQ,cAAf,8BACA,uBACEC,KAAK,SACLC,KAAK,cACLE,YAAY,IACZxB,MAAOU,EACPa,SAAU,SAACrB,GAAD,OAAOS,EAAeT,EAAEE,OAAOJ,gBAI/C,sBAAKD,UAAU,qBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6CACa,+CAEb,mCAAMa,QAER,sBAAKb,UAAU,aAAf,UACE,wCACQ,+CAER,mCAAMe,WAGV,wBAAQf,UAAU,gBAAgBE,QA7ExB,WAClBU,EAAe,IACfF,EAAS,IACTN,EAAW,IACXU,EAAgB,GAChBE,EAAkB,IAwEV,+BCpGZY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.5ad69255.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  const handlePercent = (e) => {\r\n    props.setPercent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`button ${props.className}`}\r\n      value={props.value}\r\n      onClick={handlePercent}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"./Button\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [numOfPeople, setnumOfPeople] = useState(\"\");\n  const [tipPerPerson, setTipPerPerson] = useState(0);\n  const [totalPerPerson, setTotalPerPerson] = useState(0);\n\n  const [percent, setPercent] = useState(\"\");\n\n  useEffect(() => {\n    if ((input !== \"\") & (numOfPeople !== \"\") & (percent !== \"\")) {\n      const perPerson = (input * (percent / 100)) / numOfPeople;\n      const totalPerson = input / numOfPeople + perPerson;\n\n      setTipPerPerson(perPerson);\n      setTotalPerPerson(totalPerson);\n    }\n  }, [input, numOfPeople, percent]);\n\n  const handleCustomInput = (e) => {\n    setPercent(e.target.value);\n    console.log(percent);\n  };\n\n  const handleReset = () => {\n    setnumOfPeople(\"\");\n    setInput(\"\");\n    setPercent(\"\");\n    setTipPerPerson(0);\n    setTotalPerPerson(0);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"content\">\n        <h1>S P L I T T E R</h1>\n        <div className=\"calculator\">\n          <div className=\"calculator__input\">\n            <div className=\"calculator__bill\">\n              <label htmlFor=\"bill\">Bill</label>\n              <input\n                type=\"number\"\n                name=\"bill\"\n                onChange={(e) => setInput(e.target.value)}\n                value={input}\n                placeholder=\"0\"\n              />\n            </div>\n            <div className=\"calculator__selecttip\">\n              <p>Select tip %</p>\n              <div className=\"tip_buttons_grid\">\n                <Button value={5} setPercent={setPercent}>\n                  5%\n                </Button>\n\n                <Button value={10} setPercent={setPercent}>\n                  10%\n                </Button>\n                <Button value={15} setPercent={setPercent}>\n                  15%\n                </Button>\n                <Button value={25} setPercent={setPercent}>\n                  25%\n                </Button>\n                <Button value={50} setPercent={setPercent}>\n                  50%\n                </Button>\n                <input\n                  type=\"number\"\n                  className=\"custom-input\"\n                  placeholder=\"Custom\"\n                  onChange={handleCustomInput}\n                />\n              </div>\n            </div>\n            <div className=\"calculator__numofpeople\">\n              <label htmlFor=\"numofpeople\">Number of People</label>\n              <input\n                type=\"number\"\n                name=\"numofpeople\"\n                placeholder=\"0\"\n                value={numOfPeople}\n                onChange={(e) => setnumOfPeople(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"calculator__output\">\n            <div className=\"output__text\">\n              <div className=\"tip__amount\">\n                <h3>\n                  Tip Amount <span>/ person</span>\n                </h3>\n                <h1>${tipPerPerson}</h1>\n              </div>\n              <div className=\"tip__total\">\n                <h3>\n                  Total <span>/ person</span>\n                </h3>\n                <h1>${totalPerPerson}</h1>\n              </div>\n            </div>\n            <button className=\"reset__button\" onClick={handleReset}>\n              RESET\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}